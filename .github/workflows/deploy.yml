name: Deploy Golang Bot to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Build and Deploy Golang Bot
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build binary
      run: |
        rm -f go.sum
        go mod tidy
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o thomas-bot .

    - name: Deploy to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: 22
        source: "thomas-bot,thomas-bot-dc/youtube_cookies.txt"
        target: "/tmp/"

    - name: Setup and Start Bot
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: 22
        script: |
          set -e

          echo "=========================================="
          echo "🚀 Deploying Golang Discord Bot"
          echo "=========================================="

          # Stop old Node.js bot if exists
          if pm2 describe thomas-bot > /dev/null 2>&1; then
            echo "⏹ Stopping old Node.js bot..."
            pm2 delete thomas-bot
            pm2 save
          fi

          # Clean old Node.js files
          if [ -d "/var/www/discord-bot" ]; then
            echo "🗑️ Removing old Node.js bot files..."
            rm -rf /var/www/discord-bot
          fi

          # Create new directory for Golang bot
          DEPLOY_PATH="/var/www/thomas-bot"
          mkdir -p $DEPLOY_PATH

          # Move binary and cookies
          echo "📦 Moving binary..."
          mv /tmp/thomas-bot $DEPLOY_PATH/
          chmod +x $DEPLOY_PATH/thomas-bot

          echo "🍪 Moving YouTube cookies..."
          mv /tmp/thomas-bot-dc/youtube_cookies.txt $DEPLOY_PATH/ || echo "⚠️ Cookies not found, will use without auth"

          # Install yt-dlp and ffmpeg if not exists
          if ! command -v yt-dlp &> /dev/null; then
            echo "📥 Installing yt-dlp..."
            wget -q https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -O /usr/local/bin/yt-dlp
            chmod +x /usr/local/bin/yt-dlp
          fi

          if ! command -v ffmpeg &> /dev/null; then
            echo "📥 Installing ffmpeg..."
            apt-get update && apt-get install -y ffmpeg
          fi

          # Create .env file
          cd $DEPLOY_PATH
          cat > .env << 'EOF'
          DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
          CLIENT_ID=${{ secrets.CLIENT_ID }}
          PUBLIC_KEY=${{ secrets.PUBLIC_KEY }}
          PORT=8080
          EOF

          # Create systemd service
          cat > /etc/systemd/system/thomas-bot.service << 'SYSTEMD_EOF'
          [Unit]
          Description=Thomas Discord Bot (Golang)
          After=network.target

          [Service]
          Type=simple
          User=root
          WorkingDirectory=/var/www/thomas-bot
          ExecStart=/var/www/thomas-bot/thomas-bot
          Restart=always
          RestartSec=10

          [Install]
          WantedBy=multi-user.target
          SYSTEMD_EOF

          # Reload systemd and start bot
          echo "🔄 Starting bot service..."
          systemctl daemon-reload
          systemctl enable thomas-bot
          systemctl restart thomas-bot

          # Show status
          sleep 2
          echo ""
          echo "=========================================="
          echo "✅ Deployment Complete!"
          echo "=========================================="
          systemctl status thomas-bot --no-pager -l

    - name: Show Bot Logs
      if: always()
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: 22
        script: |
          echo "📋 Recent bot logs:"
          journalctl -u thomas-bot -n 30 --no-pager || echo "⚠️ No logs yet"
